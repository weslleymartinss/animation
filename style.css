body {
    background-color: #f4f4f4;
}

.login-container {
    width: 400px;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1.3em;
}

.ativar {
    display: none;
    margin: 10px auto;
    cursor: pointer;
}

h1 {
    text-align: center;
}
label {
    display: block;
    padding: 1px;
}

input {
    width: 350px;
    height: 30px;
    font-size: 0.9em;
    background-color: #f4f4f4;
    border-radius: 5px;
    border: 2px solid #f4f4f4;
    margin-bottom: 20px ;
}

.entrar {
    cursor: pointer;
    margin: 0 auto;
    margin-top: 10px;
    display: block;
    color: rgba(0, 0, 0, 0.788);
    background-color: rgb(255, 174, 0);
    border: none;
    border-radius: 5px;
    padding: 10px 50px;
    font-size: 20px;
}

.login {
    background-color: white;
    border-radius: 5px;
    padding: 20px;
    transform: translateX(-20px);
}

.animar {

    animation: slide 1s forwards; /*Atalho, forma abreviada*/


    animation-name: slide; /*Chamando anição*/

    animation-duration: 1s; /*Duração da animção*/

    animation-fill-mode: forwards;
     /*Para ficar no ultimo estado da animação 'to' */



     animation-timing-function: ease; /*(suavidade)Velocidade da animação 'ease é o padrão'*/

     animation-delay: 0s ; /*Delay antes de começar a animação*/

     animation-direction: normal; /*Direção da animação, padrão é começar do from ao to, porém posso usar o reverse*/

     animation-play-state: running; /*Status da animação, se está ativa ou não*/

     animation-iteration-count: 1; /*Quantas vezes a animação vai ocorrer*/

}

@keyframes slide {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
        transform: translateX(20px);
    }
}